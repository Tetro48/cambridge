name: 'Custom Assembly'
on: [push, pull_request]
jobs:
  syntax-check:
    strategy:
      matrix:
        luaVersion: ["5.1", "5.4", "luajit-2.1.0-beta3"]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: leafo/gh-actions-lua@v9
      with:
        luaVersion: ${{ matrix.luaVersion }}

  assembly:
    needs: syntax-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Version naming
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/heads/* ]]; then
            echo 'version = "build-$GITHUB_RUN_NUMBER"' > load/version.lua
          else
            echo 'version = "${GITHUB_REF#refs/tags/}"' > load/version.lua
          fi
      - name: Assemble
        run: |
          zip -r9 cambridge.love libs load res scene tetris conf.lua *.lua -x "res/img/rpc/*" res/bgm/pacer_test.mp3 "libs/discord-rpc*" "libs/discordGameSDK/*"
          cat dist/windows/love.exe cambridge.love > dist/windows/cambridge.exe
          cat dist/win32/love.exe cambridge.love > dist/win32/cambridge.exe
          cp SOURCES.md LICENSE.md dist/windows/
          cp SOURCES.md LICENSE.md dist/win32/
          mkdir dist/windows/libs/
          mkdir dist/win32/libs/
          cp libs/discord-rpc_x64.dll dist/windows/libs/
          cp libs/discord-rpc_x86.dll dist/win32/libs/
      - name: Upload Windows 32-bit artifact
        uses: actions/upload-artifact@v3
        with:
          name: cambridge_windows_x86
          path: |
            dist/win32/*
            !dist/win32/love.exe
      - name: Upload Windows 64-bit artifact
        uses: actions/upload-artifact@v3
        with:
          name: cambridge_windows_x64
          path: |
            dist/windows/*
            !dist/windows/love.exe
      - name: Upload other OS artifact
        uses: actions/upload-artifact@v3
        with:
          name: cambridge_other
          path: |
            cambridge.love
            libs/discord-rpc*
            SOURCES.md
            LICENSE.md
      - name: "Cleanup"
        run: |
          rm -f cambridge.love
          rm -f dist/windows/cambridge.exe
          rm -f dist/windows/SOURCES.md
          rm -f dist/windows/LICENSE.md
          rm -rf dist/windows/libs
          rm -f dist/win32/cambridge.exe
          rm -f dist/win32/SOURCES.md
          rm -f dist/win32/LICENSE.md
          rm -rf dist/win32/libs
      
  release-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: "Grab Artifacts"
      uses: actions/checkout@v3
      uses: actions/download-artifact@v3
      with:
        path: dist/
    - name: "Pre-release"
      uses: actions/create-release@v1
      id: create_release
      if: startsWith(github.ref, 'refs/heads/')
      with:
        prerelease: true
        generate_release_notes: true
        files: |
          dist/cambridge_other.zip
          dist/cambridge_windows_x64.zip
          dist/cambridge_windows_x86.zip
    - name: "Release"
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            dist/cambridge_other.zip
            dist/cambridge_windows_x64.zip
            dist/cambridge_windows_x86.zip